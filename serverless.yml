service: cloud-responder
configValidationMode: error
custom:
  defaultRegion: us-east-1

provider:
  name: aws
  stage: dev
  runtime: nodejs14.x
  memorySize: 128
  versionFunctions: false
  lambdaHashingVersion: 20201221
  region: ${opt:region, self:custom.defaultRegion}

functions:
  authorizer:
    handler: serverless.authorizer
    timeout: 30
    role: AuthorizerRole
  capture:
    handler: serverless.capture
    timeout: 30
    role: CaptureRole
    events:
      - http:
          path: capture
          method: post
          authorizer:
            name: authorizer
            resultTtlInSeconds: 0
            identitySource: method.request.header.APIKey
  process:
    handler: serverless.process
    timeout: 900
    role: ProcessRole
    events:
      - sns: dispatch

resources:
  - Resources:
      AuthorizerRole:
        Type: AWS::IAM::Role
        Properties:
          RoleName: AuthorizerRole
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: AuthorizerRolePolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - secretsmanager:GetSecretValue
                    Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:CloudResponderSecret*"
            - PolicyName: LogsPolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement: ${file(./serverless-log-policy.yml):Statement}

      CaptureRole:
        Type: AWS::IAM::Role
        Properties:
          RoleName: CaptureRole
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: CaptureRolePoliy
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Effect: Allow
                    Action:
                      - sns:Publish
                    Resource:
                      - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:dispatch"
            - PolicyName: LogsPolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement: ${file(./serverless-log-policy.yml):Statement}

      ProcessRole:
        Type: AWS::IAM::Role
        Properties:
          RoleName: ProcessRole
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - lambda.amazonaws.com
                Action: sts:AssumeRole
          Policies:
            - PolicyName: ProcessRolePolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement: ${file(./serverless-policies.js)}
            - PolicyName: LogsPolicy
              PolicyDocument:
                Version: '2012-10-17'
                Statement: ${file(./serverless-log-policy.yml):Statement}

  - ${file(./serverless-resources.js)}
